# .github/workflows/release.yml

name: Release CLI

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check isTesting configuration
        run: |
          if grep -i "isTesting" ./src/test_utils.ts | grep -i "true"; then
            echo "❌ Error: isTesting is set to true - it should be false for production release"
            echo "Lines found:"
            grep -i "isTesting" ./src/test_utils.ts | grep -i "true"
            exit 1
          else
            echo "✅ isTesting is correctly set to false for production release"
          fi
      - name: Check cli version matches the release tag
        run: |
          # Extract version from tag (keep the 'v' prefix for matching)
          TAG_VERSION=${GITHUB_REF_NAME}
          echo "Tag version: $TAG_VERSION"
          
          if grep -r "\.version(['\"]$TAG_VERSION['\"])" ./src/; then
            echo "✅ CLI version $TAG_VERSION found in .version() call"
          else
            echo "❌ Error: .version('$TAG_VERSION') not found in source code"
            echo "Please update your .version() call to match the release tag"
            exit 1
          fi

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.4.2
          
      - name: Run the build script
        run: deno run --allow-env --allow-read --allow-write --allow-net --allow-run ./build.ts

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "binaries/*"
          tag: ${{ github.ref_name }}
          generateReleaseNotes: true
          allowUpdates: true